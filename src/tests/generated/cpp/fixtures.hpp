/** GENERATED BY BENDEC TYPE GENERATOR */
// primitive built-in: uint8_t
// primitive built-in: uint16_t
// primitive built-in: uint32_t
// ignored: char
using Age = uint8_t;
struct Header {
    uint8_t msgType;
    friend std::ostream &operator << (std::ostream &, const Header &);
} __attribute__ ((packed));
struct Uri {
    char protocol[10];
    char host[32];
    uint16_t port;
    friend std::ostream &operator << (std::ostream &, const Uri &);
} __attribute__ ((packed));
struct User {
    char firstName[16];
    char lastName[16];
    Uri uri;
    Age age;
    friend std::ostream &operator << (std::ostream &, const User &);
} __attribute__ ((packed));
struct UserExtra {
    char firstName[16];
    char lastName[16];
    Uri uri;
    Age age;
    Uri uris[4];
    friend std::ostream &operator << (std::ostream &, const UserExtra &);
} __attribute__ ((packed));
struct UserAdd {
    Header header;
    User user;
    friend std::ostream &operator << (std::ostream &, const UserAdd &);
} __attribute__ ((packed));
using CustomerAdd = UserAdd;
struct Group {
    Header header;
    uint8_t ints[8];
    User users[5];
    friend std::ostream &operator << (std::ostream &, const Group &);
} __attribute__ ((packed));
using Price = uint32_t;
struct Person {
    uint16_t a;
    uint32_t b;
    uint32_t c;
    uint8_t d;
    friend std::ostream &operator << (std::ostream &, const Person &);
} __attribute__ ((packed));
struct LargeMessage {
    Header header;
    Person person1;
    Person person2;
    uint32_t aaa;
    Price bbb;
    uint32_t ccc;
    uint32_t ddd;
    uint32_t eee;
    uint8_t fff;
    uint8_t ggg;
    char name1[64];
    char name2[64];
    char name3[64];
    char name4[64];
    friend std::ostream &operator << (std::ostream &, const LargeMessage &);
} __attribute__ ((packed));
