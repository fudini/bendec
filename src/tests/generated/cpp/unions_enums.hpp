// Generated by BenDec Type Generator

#pragma pack(push)
#pragma pack(1)

// primitive built-in: uint8_t
// primitive built-in: uint16_t

enum class AnimalKind: uint16_t {
    Zebra = 4097,
    Toucan = 4098
};

static const std::map<std::string, AnimalKind> Name2AnimalKind {
    { "Zebra", AnimalKind::Zebra },
    { "Toucan", AnimalKind::Toucan }
};

static const std::map<AnimalKind, std::string> AnimalKind2Name {
    { AnimalKind::Zebra, "Zebra" },
    { AnimalKind::Toucan, "Toucan" }
};


struct Zebra {
    AnimalKind kind;
    uint8_t legs;

    friend std::ostream &operator << (std::ostream &, const Zebra &);
};

struct Toucan {
    AnimalKind kind;
    uint16_t wingspan;

    friend std::ostream &operator << (std::ostream &, const Toucan &);
};

union Animal {
    Zebra uZebra;
    Toucan uToucan;
};

enum class AnimalKind2: uint8_t {
    Zebra2 = 1,
    Toucan2 = 2
};

static const std::map<std::string, AnimalKind2> Name2AnimalKind2 {
    { "Zebra2", AnimalKind2::Zebra2 },
    { "Toucan2", AnimalKind2::Toucan2 }
};

static const std::map<AnimalKind2, std::string> AnimalKind22Name {
    { AnimalKind2::Zebra2, "Zebra2" },
    { AnimalKind2::Toucan2, "Toucan2" }
};


struct Header {
    AnimalKind2 animalKind;

    friend std::ostream &operator << (std::ostream &, const Header &);
};

struct Zebra2 {
    Header header;
    uint8_t legs;

    friend std::ostream &operator << (std::ostream &, const Zebra2 &);
};

struct Toucan2 {
    Header header;
    uint16_t wingspan;

    friend std::ostream &operator << (std::ostream &, const Toucan2 &);
};

union Animal2 {
    Zebra2 uZebra2;
    Toucan2 uToucan2;
};

enum class Bitflags: uint8_t {
    A = 1,
    B = 2,
    Long = 4
};

static const std::map<std::string, Bitflags> Name2Bitflags {
    { "A", Bitflags::A },
    { "B", Bitflags::B },
    { "Long", Bitflags::Long }
};

static const std::map<Bitflags, std::string> Bitflags2Name {
    { Bitflags::A, "A" },
    { Bitflags::B, "B" },
    { Bitflags::Long, "Long" }
};

#pragma pack(pop)
